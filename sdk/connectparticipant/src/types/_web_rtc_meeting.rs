// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A meeting created using the Amazon Chime SDK.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WebRtcMeeting {
    /// <p>The media placement for the meeting.</p>
    pub media_placement: ::std::option::Option<crate::types::WebRtcMediaPlacement>,
    /// <p>The configuration settings of the features available to a meeting.</p>
    pub meeting_features: ::std::option::Option<crate::types::MeetingFeaturesConfiguration>,
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub meeting_id: ::std::option::Option<::std::string::String>,
}
impl WebRtcMeeting {
    /// <p>The media placement for the meeting.</p>
    pub fn media_placement(&self) -> ::std::option::Option<&crate::types::WebRtcMediaPlacement> {
        self.media_placement.as_ref()
    }
    /// <p>The configuration settings of the features available to a meeting.</p>
    pub fn meeting_features(&self) -> ::std::option::Option<&crate::types::MeetingFeaturesConfiguration> {
        self.meeting_features.as_ref()
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn meeting_id(&self) -> ::std::option::Option<&str> {
        self.meeting_id.as_deref()
    }
}
impl WebRtcMeeting {
    /// Creates a new builder-style object to manufacture [`WebRtcMeeting`](crate::types::WebRtcMeeting).
    pub fn builder() -> crate::types::builders::WebRtcMeetingBuilder {
        crate::types::builders::WebRtcMeetingBuilder::default()
    }
}

/// A builder for [`WebRtcMeeting`](crate::types::WebRtcMeeting).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WebRtcMeetingBuilder {
    pub(crate) media_placement: ::std::option::Option<crate::types::WebRtcMediaPlacement>,
    pub(crate) meeting_features: ::std::option::Option<crate::types::MeetingFeaturesConfiguration>,
    pub(crate) meeting_id: ::std::option::Option<::std::string::String>,
}
impl WebRtcMeetingBuilder {
    /// <p>The media placement for the meeting.</p>
    pub fn media_placement(mut self, input: crate::types::WebRtcMediaPlacement) -> Self {
        self.media_placement = ::std::option::Option::Some(input);
        self
    }
    /// <p>The media placement for the meeting.</p>
    pub fn set_media_placement(mut self, input: ::std::option::Option<crate::types::WebRtcMediaPlacement>) -> Self {
        self.media_placement = input;
        self
    }
    /// <p>The media placement for the meeting.</p>
    pub fn get_media_placement(&self) -> &::std::option::Option<crate::types::WebRtcMediaPlacement> {
        &self.media_placement
    }
    /// <p>The configuration settings of the features available to a meeting.</p>
    pub fn meeting_features(mut self, input: crate::types::MeetingFeaturesConfiguration) -> Self {
        self.meeting_features = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration settings of the features available to a meeting.</p>
    pub fn set_meeting_features(mut self, input: ::std::option::Option<crate::types::MeetingFeaturesConfiguration>) -> Self {
        self.meeting_features = input;
        self
    }
    /// <p>The configuration settings of the features available to a meeting.</p>
    pub fn get_meeting_features(&self) -> &::std::option::Option<crate::types::MeetingFeaturesConfiguration> {
        &self.meeting_features
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn meeting_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.meeting_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn set_meeting_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.meeting_id = input;
        self
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn get_meeting_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.meeting_id
    }
    /// Consumes the builder and constructs a [`WebRtcMeeting`](crate::types::WebRtcMeeting).
    pub fn build(self) -> crate::types::WebRtcMeeting {
        crate::types::WebRtcMeeting {
            media_placement: self.media_placement,
            meeting_features: self.meeting_features,
            meeting_id: self.meeting_id,
        }
    }
}
