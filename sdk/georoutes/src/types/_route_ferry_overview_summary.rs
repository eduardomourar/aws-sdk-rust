// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summarized details of the leg.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct RouteFerryOverviewSummary {
    /// <p>Distance of the step.</p>
    pub distance: i64,
    /// <p>Duration of the step.</p>
    /// <p><b>Unit</b>: <code>seconds</code></p>
    pub duration: i64,
}
impl RouteFerryOverviewSummary {
    /// <p>Distance of the step.</p>
    pub fn distance(&self) -> i64 {
        self.distance
    }
    /// <p>Duration of the step.</p>
    /// <p><b>Unit</b>: <code>seconds</code></p>
    pub fn duration(&self) -> i64 {
        self.duration
    }
}
impl ::std::fmt::Debug for RouteFerryOverviewSummary {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("RouteFerryOverviewSummary");
        formatter.field("distance", &"*** Sensitive Data Redacted ***");
        formatter.field("duration", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl RouteFerryOverviewSummary {
    /// Creates a new builder-style object to manufacture [`RouteFerryOverviewSummary`](crate::types::RouteFerryOverviewSummary).
    pub fn builder() -> crate::types::builders::RouteFerryOverviewSummaryBuilder {
        crate::types::builders::RouteFerryOverviewSummaryBuilder::default()
    }
}

/// A builder for [`RouteFerryOverviewSummary`](crate::types::RouteFerryOverviewSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct RouteFerryOverviewSummaryBuilder {
    pub(crate) distance: ::std::option::Option<i64>,
    pub(crate) duration: ::std::option::Option<i64>,
}
impl RouteFerryOverviewSummaryBuilder {
    /// <p>Distance of the step.</p>
    /// This field is required.
    pub fn distance(mut self, input: i64) -> Self {
        self.distance = ::std::option::Option::Some(input);
        self
    }
    /// <p>Distance of the step.</p>
    pub fn set_distance(mut self, input: ::std::option::Option<i64>) -> Self {
        self.distance = input;
        self
    }
    /// <p>Distance of the step.</p>
    pub fn get_distance(&self) -> &::std::option::Option<i64> {
        &self.distance
    }
    /// <p>Duration of the step.</p>
    /// <p><b>Unit</b>: <code>seconds</code></p>
    /// This field is required.
    pub fn duration(mut self, input: i64) -> Self {
        self.duration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Duration of the step.</p>
    /// <p><b>Unit</b>: <code>seconds</code></p>
    pub fn set_duration(mut self, input: ::std::option::Option<i64>) -> Self {
        self.duration = input;
        self
    }
    /// <p>Duration of the step.</p>
    /// <p><b>Unit</b>: <code>seconds</code></p>
    pub fn get_duration(&self) -> &::std::option::Option<i64> {
        &self.duration
    }
    /// Consumes the builder and constructs a [`RouteFerryOverviewSummary`](crate::types::RouteFerryOverviewSummary).
    pub fn build(self) -> crate::types::RouteFerryOverviewSummary {
        crate::types::RouteFerryOverviewSummary {
            distance: self.distance.unwrap_or_default(),
            duration: self.duration.unwrap_or_default(),
        }
    }
}
impl ::std::fmt::Debug for RouteFerryOverviewSummaryBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("RouteFerryOverviewSummaryBuilder");
        formatter.field("distance", &"*** Sensitive Data Redacted ***");
        formatter.field("duration", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
